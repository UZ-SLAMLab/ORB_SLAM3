%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters
#--------------------------------------------------------------------------------------------

Camera.type: "PinHole"

# Camera calibration and distortion parameters for Left IR Camera (OpenCV)
# From camera intrinsics
# K matrix
Camera.fx: 379.895904541016
Camera.fy: 379.895904541016
Camera.cx: 317.829040527344
Camera.cy: 242.992126464844

# D matrix
# Camera.k1: 0
# Camera.k2: 0
# Camera.p1: 0
# Camera.p2: 0
# Camera.k3: 0

# Computed from chessboard
# Camera.fx: 3.8239546117370509e+02
# Camera.fy: 3.8219648513972737e+02
# Camera.cx: 3.2027438449003421e+02
# Camera.cy: 2.3990883258792343e+02

Camera.k1: 1.3224423549010711e-02
Camera.k2: -1.5857661047632438e-02
Camera.p1: -1.3443119021054313e-03
Camera.p2: 1.9553483509142503e-03
Camera.k3: 2.3106074488014841e-02

Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 30

# Refer to: https://github.com/IntelRealSense/librealsense/issues/2580

# IR projector baseline times fx (approx.)
# Fx = 379.895904541016 (from get_instrinsics)
# b  = 50 / 1000 = 0.05 (from depth module baseline)
# bf = 379.895904541016 * 0.05
# Computed manually
# Camera.bf: 18.994795227
Camera.bf: 18.9481182098389

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times
# Points seen as close by the stereo/RGBD sensor are considered reliable and 
# inserted from just one frame. Far points require a match in two keyframes.
ThDepth: 800.0
# ThDepth: 1.0e+09

# Depthmap values factor for rescaling
# DepthMapFactor = 1000, which is the conversion from millimeters to meters (Realsense provides depth in millimeters)
DepthMapFactor: 999.999938964844

# Modeling Realsense D435 Sensor Noise for Improved 3D Reconstruction and Tracking.
sensor_processor/type: structured_light
sensor_processor/cutoff_min_depth: 0.2
sensor_processor/cutoff_max_depth: 3.25
sensor_processor/normal_factor_a: 0.000611
sensor_processor/normal_factor_b: 0.003587
sensor_processor/normal_factor_c: 0.3515
sensor_processor/normal_factor_d: 0
sensor_processor/normal_factor_e: 1
sensor_processor/lateral_factor: 0.01576

#--------------------------------------------------------------------------------------------
# ORB Extractor Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast
ORBextractor.iniThFAST: 18
ORBextractor.minThFAST: 4

ORBextractor.patchSize: 31

ORBextractor.halfPatchSize: 15

ORBextractor.edgeThreshold: 19

#--------------------------------------------------------------------------------------------
# Loop Closing Parameters
#--------------------------------------------------------------------------------------------
# For each loop candidate check consistency with previous loop candidates.
# Each candidate expands a covisibility group (keyframes connected to the loop 
# candidate in the covisibility graph). A group is consistent with a previous
# group if they share at least a keyframe. We must detect a consistent loop in
# several consecutive keyframes to accept it (the consecutive keyframes are given
# by the mnCovisibilityConsistencyTh).
LoopClosing.covisibilityConsistencyThreshold: 2 # 3

# If the map contains less than a minimum keyframes or less than these keyframes
# have passed from last loop detection, return false as no loop detected.
LoopClosing.minimumKeyFrames: 10

# NN Ratio for Sim3 ORB matcher
LoopClosing.sim3nnRatioOrbMatcher: 0.75

# Threshold to trigger RANSAC on Sim3
LoopClosing.ransacThresholdTrigger: 15 # 20

# Loop Closing RANSAC parameters
LoopClosing.ransacProbability: 0.95
LoopClosing.ransacMinimalInliers: 8 # 20
LoopClosing.ransacMaxIterations: 300

# Loop detection threshold (the loop is considered as detected if the matches are greater or
# equal to this threshold).
LoopClosing.detectionThreshold: 40

#--------------------------------------------------------------------------------------------
# Optimizer Parameters
#--------------------------------------------------------------------------------------------
# 2D Huber threshold.
Optimizer.2DHuberThreshold: 5.99

# 3D Huber threshold.
Optimizer.3DHuberThreshold: 7.815

# Initial Lambda for the Levenberg algorithm.
Optimizer.initialLambda: 1.0e-16

# Amount of covisible keyframes.
Optimizer.covisibleKeyframes: 100

# Number of optimization iterations for essential graph.
Optimizer.essentialGraphIterations: 20

# Number of optimization iterations for sim3.
Optimizer.sim3Iterations: 5

# Number of additional iterations if there are outliers.
Optimizer.additionalIterations: 10

# Number of additional iterations if there are no outliers.
Optimizer.additionalIterationsNoOutliers: 5

# Minimum number of inliers left before failing whole optimization.
Optimizer.minimumInliersBeforeFail: 10

#--------------------------------------------------------------------------------------------
# Tracking Parameters
#--------------------------------------------------------------------------------------------
# Minimum number of frames to insert keyframes and to check relocalisation.
Tracking.minFrames: 0

# An ORB matcher is used with the following nn ratio for tracking the reference
# key frame.
Tracking.referenceKeyframeNnRatioOrbMatcher: 0.7

# If the number of matches is less than this threshold, the track of reference
# keyframe fails.
Tracking.minimumMatchesRefKeyframe: 15

# If the number of matches, discarding outliers, is more or equal to this value,
# the track of reference keyframe succeeds.
Tracking.keyframeTrackingThreshold: 10

# All the points closer than ThDepth are inserted unless these are less than 100,
# then the 100 closest are used.
Tracking.pointsCloserThreshold: 100

# An ORB matcher is used with the following nn ratio for tracking with
# the motion model.
Tracking.motionModelNnRatioOrbMatcher: 0.9

# In Stereo tracking mode, used to determine the searching radius after being
# scaled (track with motion model).
Tracking.stereoSearchingRadius: 15

# In all the tracking modes, used to determine the searching radius after being
# scaled (track with motion model).
Tracking.searchingRadius: 7

# If matches from ORBmatcher are less than this threshold,
# use twice the th value (track with motion model).
Tracking.speedupMatchesThreshold: 20

# If matches from ORBmatcher are less than this threshold after widening window search,
# the track with motion model fails.
Tracking.speedupMatchesThreshold2: 20

# After removing ouliers, if the number of matches is greater than this threshold,
# tracking with motion model succeeds.
Tracking.motionModelThreshold: 10

# Minimum number of matches inliers to decide if tracking with local map is successful.
Tracking.localMapTrackingThreshold: 30

# Minimum number of matches inliers to decide if tracking with local map
# is successful, when a relocalization has been made recently.
Tracking.localMapTrackingThreshold2: 50

# For creating a new keyframe, all the points closer than ThDepth are inserted 
# unless these are less than the following threshold, then the following value (closest) are used.
Tracking.newKeyframeThreshold: 100

# The map points are projected into the frame and if the cosine
# between the last en current viewing angle is smaller then the following delta
# then it is used.
Tracking.cosineDelta: 0.5

# An ORB matcher is used with the following nn ratio for searching local points.
Tracking.searchLocalPointsNnRatioOrbMatcher: 0.8

# In RGBD tracking mode, used to determine the searching radius after being
# scaled for the matcher SearchByProjection.
Tracking.RGBDSearchingRadiusThreshold: 3

# If the camera has been relocalised recently, perform a coarser search for the
# matcher of SearchByProjection.
Tracking.searchingByProjectionThreshold: 5

# If less than the following limit keyframes that observe a map point are included 
# in the local map, then it is filled up to this limit using keyframes 
# that are neighbors to already-included keyframes.
Tracking.keyframesLimit: 80

# An ORB matcher is used with the following nn ratio for relocalization.
Tracking.relocalizationNnRatioOrbMatcher: 0.75

# If more than the following value matches are found between the local frame and one
# of the keyframes, this keyframe is considered a candidate.
Tracking.keyframeCandidateThreshold: 15

# A PNP solver is run using the following ransac parameters.
Tracking.pnpSolverRansacProbability: 0.99
Tracking.pnpSolverRansacMinInliers: 10
Tracking.pnpSolverRansacMaxIterations: 300
Tracking.pnpSolverRansacMinSet: 4
Tracking.pnpSolverRansacEpsilon: 0.5
Tracking.pnpSolverRansacTh2: 5.991

# An ORB matcher is used with the following nn ratio for relocalization
# for the P4P RANSAC to catch enough inliers.
Tracking.p4pRelocalizationNnRatioOrbMatcher: 0.9

# Number of RANSAC iterations for relocalization.
Tracking.ransacIterationsRelocalization: 5

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.1
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0.1
Viewer.ViewpointY: -10
Viewer.ViewpointZ: 0
Viewer.ViewpointF: 500

#--------------------------------------------------------------------------------------------
# Map Parameters
#--------------------------------------------------------------------------------------------
Map.mapfile: map.bin
